( This program 'cleans' ^! files by removing all comments and non-instruction characters.
|
| The general approach is to read characters from stdin and compare them against the
| list of ^! instructions, printing those that match. The complication comes from block
| comments, which must be balanced and ignored.
|   For these, the auxiliary stack is used, since comments have LIFO behaviour. Every '('
| encountered pushes a dummy value (0) to aux, and ')' pops a value from aux. Then, if aux
| is non-empty, the instructions are checked. Otherwise, nothing is printed.
)

,:[
    ( Prepare main stack with ASCII codes )
    want ( 33 36 37 42 43 44 45 46 58 59 60 62 63 64 91 93 94 )
    >            (-> c aux)

    ^!!!!:+      8
    :>           8 (-> 8 aux)
    :+:+         32
    :>           32 (-> 32 aux)
    !:!!!        33 36
    :!           33 36 37
    :!!!!!       33 36 37 42
    :!:!:!:!     33 36 37 42 43 44 45 46
    ^!!!!::      33 36 37 42 43 44 45 46 4  4  4
    ++           33 36 37 42 43 44 45 46 12
    +            33 36 37 42 43 44 45 58
    :!:>         33 36 37 42 43 44 45 58 59 (-> 59 aux)
    :!:!!:!:!    33 36 37 42 43 44 45 58 59 60 62 63 64
    <<:>         33 36 37 42 43 44 45 58 59 60 62 63 64 (59 32 <-> 32 aux)
    +            33 36 37 42 43 44 45 58 59 60 62 63 64 91
    :!!:!        33 36 37 42 43 44 45 58 59 60 62 63 64 91 93 94

    <<           (32 8 <- aux)
    +:!          40 41
    <            40 41 (c <- aux)

    ( Handle comments )
    :           40      41      c       c
    @-          40      c       (c-41)
    :[*^^!-^]   40      c       0|(-1)
    ![          40      c       (1|0 loop?)
        (if c == 41 -- right bracket)
        <*  assume aux has elements
    ^]
    :@-         c       (c-40)
    :[*^^!-^]![
        (if c == 40 -- left bracket)
        ^>
    ^]

    ( Handle instructions )
    ^;[?[*?]^^!-^]![
        (if aux empty)
        >       33 36 37 42 43 44 45 58 59 60 62 63 64 91 93 94 (-> c aux)
        ?[
            (while main non-empty)
            <:  (main x c c <- aux)
            @-  c (c-x)
            :[*^^!-^]![
                (if c == x)
                :.
            ^]
            >   (main -> c aux)
        ?]
        <       (c <- aux)
        *
    ^]
,:]

^!!!!!:+.  final newline
